// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// inn/control.js
//
// copyright (c) 2011-2017 drow <drow@bin.sh>
// all rights reserved.

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// configuration

  var form_id = 'inn_form';
  var rpc_url = '/fantasy/random/rpc.cgi';

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// initialize form

  function init_form () {
    client_form(form_id);

    $A($(form_id).elements).each(function (input) {
      input.selectedIndex = rand(input.options.length);
    });
    get_name();
      Event.observe('name','click',get_name);
      Event.observe('type','change',type_reaction);
      Event.observe('order','change',get_patrons);
    get_loc();
      Event.observe('new_loc','click',get_loc);
    get_desc();
      Event.observe('new_desc','click',get_desc);
    get_keeper();
      Event.observe('new_keeper','click',get_keeper);
    get_menu();
      Event.observe('new_menu','click',get_menu);
    get_patrons();
      Event.observe('new_patrons','click',get_patrons);
    get_rumors();
      Event.observe('new_rumors','click',get_rumors);
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get random name

  function get_name () {
    var type = $('type').getValue() + ' Name';
    var query = { 'type': type, 'n': 1 };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_name(req); },
      'onFailure': function (req) { name_error(req.statusText); },
      'onException': function (req,err) { name_error('System Error'); }
    };
    new Ajax.Request(rpc_url,opts);
  }
  function recv_name (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return name_error('No response');
    }
    $('name').update(list[0]);
  }
  function name_error (string) {
    $('name').update(string);
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// type reaction

  function type_reaction () {
    get_loc(); get_desc(); get_keeper();
    get_menu(); get_patrons(); get_rumors();
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get location

  function get_loc () {
    var type = $('type').getValue() + ' Location';
    var query = { 'type': type, 'n': 1 };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_loc(req); },
      'onFailure': function (req) { loc_error(req.statusText); },
      'onException': function (req,err) { loc_error('System Error'); }
    };
    new Ajax.Request(rpc_url,opts);
  }
  function recv_loc (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return loc_error('No response');
    }
    $('location').update(fmt_p(list[0]));
  }
  function loc_error (text) {
    $('location').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get description

  function get_desc () {
    var type = $('type').getValue() + ' Description';
    var query = { 'type': type, 'n': 1 };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_desc(req); },
      'onFailure': function (req) { desc_error(req.statusText); },
      'onException': function (req,err) { desc_error('System Error'); } };

    new Ajax.Request(rpc_url,opts);
  }
  function recv_desc (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return desc_error('No response');
    }
    $('description').update(fmt_p(list[0]));
  }
  function desc_error (text) {
    $('description').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get innkeeper

  function get_keeper () {
    var type = $('type').getValue() + 'keeper';
    var query = { 'type': type, 'n': 1 };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_keeper(req); },
      'onFailure': function (req) { keeper_error(req.statusText); },
      'onException': function (req,err) { keeper_error('System Error'); } };

    new Ajax.Request(rpc_url,opts);
  }
  function recv_keeper (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return keeper_error('No response');
    }
    $('innkeeper').update(fmt_p(list[0]));
  }
  function keeper_error (text) {
    $('innkeeper').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get menu

  function get_menu () {
    var type = $('type').getValue() + ' Fare';
    var query = { 'type': type, 'n': roll_dice('2d4') };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_menu(req); },
      'onFailure': function (req) { menu_error(req.statusText); },
      'onException': function (req,err) { menu_error('System Error'); } };

    new Ajax.Request(rpc_url,opts);
  }
  function recv_menu (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return menu_error('No response');
    }
    $('menu').update(fmt_ol(list));
  }
  function menu_error (text) {
    $('menu').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get patrons

  function get_patrons () {
    var query = { 'type': 'Inn NPC', 'n': roll_dice('2d4'),
                  'order': $('order').getValue() };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_patrons(req); },
      'onFailure': function (req) { patrons_error(req.statusText); },
      'onException': function (req,err) { patrons_error('System Error'); } };

    new Ajax.Request(rpc_url,opts);
  }
  function recv_patrons (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return patrons_error('No response');
    }
    $('patrons').update(fmt_ol(list));
  }
  function patrons_error (text) {
    $('patrons').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// get rumors

  function get_rumors () {
    var type = $('type').getValue() + ' Rumor';
    var query = { 'type': type, 'n': roll_dice('2d4') };

    var opts = { 'method': 'get', 'parameters': query,
      'onSuccess': function (req) { recv_rumors(req); },
      'onFailure': function (req) { rumors_error(req.statusText); },
      'onException': function (req,err) { rumors_error('System Error'); } };

    new Ajax.Request(rpc_url,opts);
  }
  function recv_rumors (req) {
    if (req.responseJSON) {
      list = req.responseJSON;
    } else if (req.responseText) {
      list = req.responseText.evalJSON();
    } else {
      return rumors_error('No response');
    }
    $('rumors').update(fmt_ol(list));
  }
  function rumors_error (text) {
    $('rumors').update(fmt_p(text));
  }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// showtime

  document.observe('dom:loaded',init_form);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
